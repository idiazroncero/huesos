.visually-hidden {
	@extend %hidden;
}


@if $show-grid == true {
	h1, 
	h2, 
	h3, 
	h4, 
	h5, 
	h6, 
	p {
		background-size: ritmo(4) ritmo(4);
		background-image: linear-gradient(to bottom, rgba(0,0,0,0.5) 1px, transparent 1px);
		background-repeat: repeat;
	}
}


/*
Disabled

Class and placeholder used to dim the element and indicate that is not usable anymore.

It also disables user interactions on buttons, links, etc... (see on their respective sections)

Markup:
<p class="disabled">I'm no longer active</p>
<mark class="disabled"> I'm no longer working</mark>


Styleguide Helpers.disabled
*/

%disabled,
.disabled {
	opacity: $disabled-opacity;
}



/*
Text alignment

Helper classes that provide a quick access to `text-align`.

They also perform component-scoped alignment of items (see menu, figure and figcaption, etc...)

Markup:
<p class="left">Text-alignment or even</p>
<nav class="menu"><ul class="center"><li><a href="#">Menu item</a></li><li><a href="#">alignment</a></li></ul></nav>
<p class="right">can be achieved using this classes</p>


Styleguide Helpers.alignment
*/
.left {
	text-align:left;
}

.center {
	text-align:center;
}

.right {
	text-align:right;
}


/*
Hide scrollbar

Tries to hide the scrollbar of an overflown element (auto, scroll-x or scroll-y)

It uses -webkit- and -ms- prefixes and unofficial css properties. It won't work on Firefox below v64.

Markup:
<p style="height:100px; width: 50px; overflow: auto;">
	This uses -webkit- and -ms- prefixes and unofficial css properties. It won't work on Firefox below v64. It's not perfect, but it's far better than using negative padding and margin hacks that will provoke content hiding on macOS.
</p>


Styleguide Helpers.alignment
*/
.scrollbar-hidden {
    &::-webkit-scrollbar { width: 0 !important }
    scrollbar-width: none;
    -ms-overflow-style: none;
}