/*
Headings

The `<h1>` to `<h6>` HTML elements can be mimicked using `.h1` to `.h6` classes

Markup:
<h1>Main titles use heading one</h1>
<h2>Subtitules and main sections use h2</h2>
<h3>H3 is mainly for nested sections</h3>
<h4>In case you need furher sectioning, use an h4</h4>
<h5>Rarely you will need a heading five</h5>
<h6>Heading six is rather unexpected</h6>


Styleguide Typography.headings
*/

h1, .h1 { @include ritmo-font-size($h1-font-size); }
h2, .h2 { @include ritmo-font-size($h2-font-size); }
h3, .h3 { @include ritmo-font-size($h3-font-size); }
h4, .h4 { @include ritmo-font-size($h4-font-size); }
h5, .h5 { @include ritmo-font-size($h5-font-size); }
h6, .h6 { @include ritmo-font-size($h6-font-size); }

@if $heading-vertical-rhythm {
	h1,.h1,
	h2,.h2,
	h3,.h3 {
		line-height: $heading-vertical-rhythm;
	}
}

h1, h2, h3, h4, h5, h6,
.h1, .h2, .h3, .h4, .h5, .h6  {
	color: get-color(text, heading);
	font-weight:$heading-font-weight;
	small {
		color: inherit;
		vertical-align: 0;
	}
}

/*
Secondary font

Helper `.class` and `%placeholder` used to apply the secondary font as set on `_config.scss`

Markup:
<p class="font-secondary">This paragraph has been set to use the secondary font.
It could otherwise have used a regular CSS selector with <code>@extend %font-secondary</code>
to achive the same effect</p>


Styleguide Helpers.secondary-font
*/

.font-secondary,
%font-secondary {
	font-family: $font-secondary;
}

@each $item in $font-secondary-items {
	#{$item} {
		@extend %font-secondary;
		// In case is a link, we have to kill all effects!
		a {
			@include kill-link-decoration();
		}
	}
}

/*
Quotes

Tipographic quotes can be explicitly defined using the variable `$quotes`

Markup:
<q>Look! As the quote said, <q>a quote can be nested inside another quote</q></q>

Styleguide Typography.quotes
*/
q {
	quotes: $quotes;
}

/*
Blockquotes

Blockquotes receive a padding based on '$gutter`

Markup:
<blockquote class="myclass {{modifier_class}}">
  <p>A block quotation (also known as a long quotation or extract) is a quotation in a written document, that is set off from the main text as a paragraph, or block of text.</p>
  <p>It is typically distinguished visually using indentation and a different typeface or smaller size quotation. It may or may not include a citation, usually placed at the bottom.</p>
  <cite><a href="#!">Said no one, ever.</a></cite>
</blockquote>

.blockquote--decorated        - Adds the user-defined decoration (usually a quote) as a pseudo-element

Styleguide Typography.blockquote
*/

blockquote {
	margin: 0 0 $spacer $blockquote-whitespace;
}

.blockquote--decorated{
	position:relative;
	&:before {
		content: $blockquote-decoration;
		@include ritmo-font-size($blockquote-decoration-size);
		font-family: $blockquote-font;
		position: absolute;
		top:ritmo(1);
		left: - $blockquote-whitespace;
	}
}

code,
kbd,
samp,
var {
	display:inline-block;
	vertical-align:baseline;
	box-decoration-break: clone;
	@if $code-background != false {
		background-color: $code-background;
		color: contrast-color($code-background);
		padding: 0 ritmo(1);
	}
	@if $code-border-radius != false {
		border-radius: $code-border-radius;
	}
}


/*
Minititle

The concept of "minititle" makes reference to a small heading, normally used for sectioning.

It is an opinionated design that reduces the text size and then augments its visual weight by using a combination of a bold weight, an uppercase text-transform and a greater letter-spacing.

Markup:
<section>
	<p class="minititle">This is the minititle of this section</p>
	<p>A normal text. As we said before, the minititle gives visual weight while using a small font-size</p>
</section>
<section class="card" style="width:250px">
	<h3 class="minititle">An h3 reduced!</h3>
	<p>You can use your <em>minititle</em> on <code>heading</code> elements and maintain the semantics while reducing the font-size</p>
</section>


Styleguide Typography.minititle
*/
.minititle {
	@include minititle();
}

/*
Icons

The preferred use for icons is `<svg>` inline markup wrapped on `<i class="icon">` tags.

Instead of SVG, typography can be used as well. Huesos will consistently style the sizing on both cases.

A set of icons is __not__ provided. You are supposed to provide your own choices.

Markup:
<p><i class="icon"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20"><path d="M12.496 17.414c-.394-1.096-1.805-4.775-2.39-6.297-1.103.737-2.334 1.435-3.512 1.928-.366 1.28-1.094 3.709-1.446 4.033-.604.557-.832.485-.925-.279s-.485-3.236-.485-3.236-2.162-1.219-2.84-1.568-.667-.591.057-.974c.422-.223 2.927-.085 4.242.005.861-.951 1.931-1.882 2.993-2.679-1.215-1.076-4.15-3.675-5.034-4.424-.776-.658.079-.797.079-.797.39-.07 1.222-.132 1.628-.009 2.524.763 6.442 2.068 7.363 2.376l1.162-.821c4.702-3.33 5.887-2.593 6.111-2.27s.503 1.701-4.199 5.032l-1.16.823c-.029.98-.157 5.151-.311 7.811-.025.428-.367 1.198-.565 1.544-.001 0-.423.765-.768-.198z"/></svg></i> Aircrafts & other stuff</p>
<p><i class="icon">☝︎</i> Drag & Drop me</p>
<a href="#" class="button"><i class="icon mr pr br quarter-gutter"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20"><path d="M17.316 6.246c.008.162.011.326.011.488 0 4.99-3.797 10.742-10.74 10.742-2.133 0-4.116-.625-5.787-1.697a7.577 7.577 0 0 0 5.588-1.562 3.779 3.779 0 0 1-3.526-2.621 3.858 3.858 0 0 0 1.705-.065 3.779 3.779 0 0 1-3.028-3.703v-.047a3.766 3.766 0 0 0 1.71.473 3.775 3.775 0 0 1-1.168-5.041 10.716 10.716 0 0 0 7.781 3.945 3.813 3.813 0 0 1-.097-.861 3.773 3.773 0 0 1 3.774-3.773 3.77 3.77 0 0 1 2.756 1.191 7.602 7.602 0 0 0 2.397-.916 3.789 3.789 0 0 1-1.66 2.088 7.55 7.55 0 0 0 2.168-.594 7.623 7.623 0 0 1-1.884 1.953z"/></svg></i>An icon inside a button inherits its properties!</a>


Styleguide Typography.icons
*/

.icon {
	font-weight:normal;
	font-style:normal;
	line-height:1;
	height:1rem;
	display:inline-block;
	margin-right:$gutter / 4;
	svg {
		height:100%;
		width:auto;
		vertical-align:bottom;
	}
	&:after {

	}
}

// .icon--arrow-down:after {
// 	content:"↓"
// }

// .icon--arrow-up:after {
// 	content:"↑"
// }

// .icon--check:after {
// 	content:"✓"
// }

/*
Paragraph Text

Paragraph items wrapped on any element marked as `.text` will have its last `p` child set marginless.

They also feature an extra spacing on headings.

This used to be global behavior, but there are moments on which a standalone `p` needs to have its `margin-bottom` untouched.

Markup:
<section class="text">
	<h2>First heading has no margin-top</h2>
	<p>Hello there! i'm the first pararagph inside a card marked as text.</p>
	<p>This means we can write several paragraphs and be sure that the last one will feature no margin-bottom</p>
	<h3>But the rest of headings have!</h3>
	<p>Otherwise, I will end up breaking the design by adding an unneeded space at the bottom!</p>
</section>

Styleguide Typography.paragraph
*/

.text {
	h1, h2, h3 {
		margin-top: $gutter * 2;
	}
	section,
	article {
		margin-bottom: $gutter * 2;
	}
	// Except if it is the first child of the text...
	h1:first-child, h2:first-child, h3:first-child {
		margin-top:0;
	}
	p:last-child {
		margin-bottom:0;
	}
}