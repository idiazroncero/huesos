/*
contrast-color($item)

Checks a given HTML item against `$font-secondary-items` map in order to get the font specific font-weight.

$item - [String] - an HTMl element (without opening and closing `< >` marks)

Styleguide Functions.Typography.Bold
*/

@function bold($item: &) {
	@if index($font-secondary-items, $item) == null {
		@return $font-main-bold;
	} @else {
		@return $font-secondary-bold;
	}
}


/*
Typography

Mixins that perform typography variations and calculations.

Styleguide Mixins.Typography
*/

/*
minititle($size, $weight, $uppercase, $letter-spacing)

Formats a text to apply the <span class="minititle">minititle</span> styling, used for small headings and higly contrasted small texts.

By overriding the defaults, minititle() becomes a full-fledged tool capable of handling many of the usual modificacions of text.

$size - A valid font-size. Defaults to $h6-font-size
$weight - Font weight. Defaults to $bold
$uppercase - [Boolean] - Wether to apply `text-transform: uppercase`. Defaults to true.
$letter-spacing - A valid value for `letter-spacing`. Defaults to global `$letter-spacing`

Styleguide Mixins.Typography.Minititle
*/
@mixin minititle($size: $h6-font-size, $weight: $font-main-bold, $uppercase: true, $letter-spacing: $letter-spacing) {
	@include ritmo-font-size($size);
	font-weight: $weight;
	@if $uppercase {
		text-transform:uppercase;
	}
	letter-spacing: $letter-spacing;
}


@mixin text-border($color) {
    color: transparent !important;
    text-shadow: 
        -1px -1px 0 $color,  
        1px -1px 0 $color,
        -1px 1px 0 $color,
        1px 1px 0 $color;
    
    @at-root {
        @supports (-webkit-text-stroke: 1px $color) {
            & {
                text-stroke: 1px $color;
                -webkit-text-stroke: 0.5px $color;
                text-shadow:none;
            }
        }
    }
}